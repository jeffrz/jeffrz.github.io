<html><head>
<title>INFO 3300 - October 23</title>

  <link href="https://fonts.googleapis.com/css?family=Lato:400,700|Raleway:400,700" rel="stylesheet">
  
  <link rel="stylesheet" type="text/css" href="../css/normalize.css">
  <link rel="stylesheet" type="text/css" href="../css/skeleton.css">
  <link rel="stylesheet" type="text/css" href="../css/custom-style.css">
  <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.2.0/styles/default.min.css">
  <link rel="stylesheet" href="../css/hljs-base16.css">
  <script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.2.0/highlight.min.js"></script>
  
  <script src="https://d3js.org/d3.v7.min.js"></script>
  
  <style>
  
  line.dashed {
    stroke: #aaa;
    stroke-width: 1px;
    stroke-dasharray: 2;
  }
  text.axis {
    text-anchor: end;
    font-variant: all-small-caps;
  }
  
  </style>

</head>
<body>
  <div class="container larger">
    
    <h3>Notes for October 23</h3>
    <p>Check out the documentation for <a href="https://d3js.org/d3-force">d3.force</a>.</p>
    <p>If you want to deal with non-circular collision hulls or other advanced physics things, you will want a <a href="https://github.com/bebraw/jswiki/wiki/Physics-libraries">physics engine</a>. That said, <a href="https://observablehq.com/@d3/force-directed-lattice?collection=@d3/d3-force">a lot can be done in d3</a> with careful implementation work.</p>

  <h5>HTML for today:</h5>

  <svg id="all-passengers" height="200" width="600" style="background: #sff; margin-top:50px" >
  </svg>
  <div>
  <button id="play">Play</button>
  <button id="stop">Stop</button>
  <button id="tick">Tick</button>
  <button id="rand">Randomize</button>
  </div>

  <svg id="by-class" height="400" width="600" style="background: #fff; margin-top:50px" >


  <!-- This block will be automatically filled with syntax-highlighted code from the script below -->
  <h5>Code for today:</h5>
  <pre>
    <code id="display1" class="hljs javascript">
    </code>
  </pre>
  <pre>
    <code id="display2" class="hljs javascript">
    </code>
  </pre>

  

    <script id="notes1">
    
    const requestData = async () => {

      // Dataset of titanic survivors from a much earlier lecture
      const passengers = await d3.json("../datasets/titanic.json");
      const passengers_copy = await d3.json("../datasets/titanic.json");
      const passengers_by_class = await d3.json("../datasets/titanic.json");

      // Build some scales
      const ageExtent = d3.extent(passengers, d=>d.age);
      const ageScale = d3.scaleLinear().domain(ageExtent).range([50,550]);
      const mortalityScale = d3.scaleOrdinal().domain(["survived","died"]).range(["#259dc3","#c61530"]);
      const classScale = d3.scalePoint().domain(["first","second","third"]).range([50,300]);

      // Add some light line indicators
      d3.select("#all-passengers").append("line").attr("x1",ageScale(ageExtent[0])).attr("x2",ageScale(ageExtent[1]))
                                                 .attr("y1",100).attr("y2",100).attr("class","dashed");
      d3.select("#by-class").append("line").attr("x1",ageScale(ageExtent[0])).attr("x2",ageScale(ageExtent[1]))
                                          .attr("y1",classScale("first")).attr("y2",classScale("first")).attr("class","dashed");
      d3.select("#by-class").append("line").attr("x1",ageScale(ageExtent[0])).attr("x2",ageScale(ageExtent[1]))
                                       .attr("y1",classScale("second")).attr("y2",classScale("second")).attr("class","dashed");
      d3.select("#by-class").append("line").attr("x1",ageScale(ageExtent[0])).attr("x2",ageScale(ageExtent[1]))
                                .attr("y1",classScale("third")).attr("y2",classScale("third")).attr("class","dashed");
      d3.select("#by-class").append("text").text("first").attr("class","axis").attr("x",45).attr("y",classScale("first"));
      d3.select("#by-class").append("text").text("second").attr("class","axis").attr("x",45).attr("y",classScale("second"));
      d3.select("#by-class").append("text").text("third").attr("class","axis").attr("x",45).attr("y",classScale("third"));

      // Axes to show age
      var ageAxis = d3.axisBottom(ageScale);
      d3.select("#all-passengers").append("g").attr("transform","translate(0,170)").call(ageAxis);
      d3.select("#by-class").append("g").attr("transform","translate(0,370)").call(ageAxis);

      // Layers for drawing
      let allLayer = d3.select("#all-passengers").append("g");
      let allWidth = d3.select("#all-passengers").attr("width");
      let allHeight = d3.select("#all-passengers").attr("height");
      let classLayer = d3.select("#by-class").append("g");
      let classWidth = d3.select("#by-class").attr("width");
      let classHeight = d3.select("#by-class").attr("height");


      // --- Notes from class ---
      
      
      
      
      
      
      
      
      
      
      // Handle the buttons provided in the HTML
      d3.select("#play").on("click", () => {
        // Start animating the simulation
      });
      d3.select("#stop").on("click", () => {
        // Pause the simulation animation
      });
      d3.select("#tick").on("click", () => {
        // Move the simulation one "tick"
      });
      d3.select("#rand").on("click", () => {
        // Randomize positions and restart the simulation
      });



      

    };

    requestData();


    
    </script>


  <!--- calls the highlight library to fill the <pre> tag with code --->
  <script>
  
  function sanitize(s) {
    return s.replace("<br>", "\\n")
            .replace(/&/g, "&amp;")
            .replace(/</g, "&lt;")
            .replace(/>/g, "&gt;")
            .replace(/"/g, "&quot;")
            .replace(/'/g, "&#039;");
          }
    document.getElementById("display1").innerHTML = sanitize( document.getElementById("notes1").innerText);
    hljs.highlightAll();
  </script>


  </div>
</body>
</html>
